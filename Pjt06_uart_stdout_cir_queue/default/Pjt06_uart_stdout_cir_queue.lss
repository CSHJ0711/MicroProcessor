
Pjt06_uart_stdout_cir_queue.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  0000093a  000009ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000093a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00800234  00800234  00000a02  2**0
                  ALLOC
  3 .stab         00000c9c  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  000016a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  00001858  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012e3  00000000  00000000  00001a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b2  00000000  00000000  00002cfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c11  00000000  00000000  000035ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000028c  00000000  00000000  000041c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000036f  00000000  00000000  0000444c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009f5  00000000  00000000  000047bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000051b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  64:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  6c:	0c 94 84 01 	jmp	0x308	; 0x308 <__vector_27>
  70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e3       	ldi	r30, 0x3A	; 58
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 33       	cpi	r26, 0x34	; 52
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
 110:	12 e0       	ldi	r17, 0x02	; 2
 112:	a4 e3       	ldi	r26, 0x34	; 52
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	af 37       	cpi	r26, 0x7F	; 127
 11c:	b1 07       	cpc	r27, r17
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
 120:	0e 94 b3 01 	call	0x366	; 0x366 <main>
 124:	0c 94 9b 04 	jmp	0x936	; 0x936 <_exit>

00000128 <__bad_interrupt>:
 128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <uart_init>:
FILE Mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
char uart_busy;

void uart_init()
{
   stdout = &Mystdout;
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	92 e0       	ldi	r25, 0x02	; 2
 130:	90 93 7c 02 	sts	0x027C, r25
 134:	80 93 7b 02 	sts	0x027B, r24
   uart_busy = 0;
 138:	10 92 34 02 	sts	0x0234, r1
   q_init();
 13c:	0e 94 3c 01 	call	0x278	; 0x278 <q_init>
   UBRR0H = 0x00; UBRR0L = 0x07; //115.2k
 140:	10 92 c5 00 	sts	0x00C5, r1
 144:	87 e0       	ldi	r24, 0x07	; 7
 146:	80 93 c4 00 	sts	0x00C4, r24
   sbi(UCSR0A, U2X0); //UCSR0A |= (1 << U2X0);
 14a:	e0 ec       	ldi	r30, 0xC0	; 192
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	82 60       	ori	r24, 0x02	; 2
 152:	80 83       	st	Z, r24
   sbi(UCSR0B, TXEN0);
 154:	e1 ec       	ldi	r30, 0xC1	; 193
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	80 81       	ld	r24, Z
 15a:	88 60       	ori	r24, 0x08	; 8
 15c:	80 83       	st	Z, r24
   sbi(UCSR0B, TXCIE0);
 15e:	80 81       	ld	r24, Z
 160:	80 64       	ori	r24, 0x40	; 64
 162:	80 83       	st	Z, r24
}
 164:	08 95       	ret

00000166 <uart_putchar>:
#include "init.h"
#include "q.h"


int uart_putchar(char ch, FILE *stream)
{
 166:	cf 93       	push	r28
 168:	c8 2f       	mov	r28, r24
   if (ch == '\n')
 16a:	8a 30       	cpi	r24, 0x0A	; 10
 16c:	19 f4       	brne	.+6      	; 0x174 <uart_putchar+0xe>
      uart_putchar('\r', stream);
 16e:	8d e0       	ldi	r24, 0x0D	; 13
 170:	0e 94 b3 00 	call	0x166	; 0x166 <uart_putchar>
   cli();
 174:	f8 94       	cli
   if (!uart_busy) {
 176:	80 91 34 02 	lds	r24, 0x0234
 17a:	88 23       	and	r24, r24
 17c:	89 f4       	brne	.+34     	; 0x1a0 <uart_putchar+0x3a>
      UDR0 = ch;
 17e:	c0 93 c6 00 	sts	0x00C6, r28
	  uart_busy = 1;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	80 93 34 02 	sts	0x0234, r24
 188:	10 c0       	rjmp	.+32     	; 0x1aa <uart_putchar+0x44>
   }
   else {
      while(q_insert(ch) == 0) {
	     sei();
 18a:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18c:	8f ef       	ldi	r24, 0xFF	; 255
 18e:	9f e3       	ldi	r25, 0x3F	; 63
 190:	a2 e0       	ldi	r26, 0x02	; 2
 192:	81 50       	subi	r24, 0x01	; 1
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	a0 40       	sbci	r26, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <uart_putchar+0x2c>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <uart_putchar+0x36>
 19c:	00 00       	nop
		 _delay_ms(100);
		 cli();
 19e:	f8 94       	cli
   if (!uart_busy) {
      UDR0 = ch;
	  uart_busy = 1;
   }
   else {
      while(q_insert(ch) == 0) {
 1a0:	8c 2f       	mov	r24, r28
 1a2:	0e 94 45 01 	call	0x28a	; 0x28a <q_insert>
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	81 f3       	breq	.-32     	; 0x18a <uart_putchar+0x24>
	     sei();
		 _delay_ms(100);
		 cli();
      }
   }
   sei();
 1aa:	78 94       	sei
   return(1);
}
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	cf 91       	pop	r28
 1b2:	08 95       	ret

000001b4 <is_prime>:
#include <stdio.h>
#include "prime.h"

int is_prime(int n) {
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	fc 01       	movw	r30, r24
  int i;
  for ( i = 2; i <= n/2; i++)
 1ba:	62 e0       	ldi	r22, 0x02	; 2
 1bc:	70 e0       	ldi	r23, 0x00	; 0
 1be:	0e 94 bb 01 	call	0x376	; 0x376 <__divmodhi4>
 1c2:	eb 01       	movw	r28, r22
 1c4:	22 e0       	ldi	r18, 0x02	; 2
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	08 c0       	rjmp	.+16     	; 0x1da <is_prime+0x26>
    if ((n % i) == 0) return(0); //FALSE
 1ca:	cf 01       	movw	r24, r30
 1cc:	b9 01       	movw	r22, r18
 1ce:	0e 94 bb 01 	call	0x376	; 0x376 <__divmodhi4>
 1d2:	00 97       	sbiw	r24, 0x00	; 0
 1d4:	41 f0       	breq	.+16     	; 0x1e6 <is_prime+0x32>
#include <stdio.h>
#include "prime.h"

int is_prime(int n) {
  int i;
  for ( i = 2; i <= n/2; i++)
 1d6:	2f 5f       	subi	r18, 0xFF	; 255
 1d8:	3f 4f       	sbci	r19, 0xFF	; 255
 1da:	c2 17       	cp	r28, r18
 1dc:	d3 07       	cpc	r29, r19
 1de:	ac f7       	brge	.-22     	; 0x1ca <is_prime+0x16>
    if ((n % i) == 0) return(0); //FALSE
  return(1); //true
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <is_prime+0x36>
#include "prime.h"

int is_prime(int n) {
  int i;
  for ( i = 2; i <= n/2; i++)
    if ((n % i) == 0) return(0); //FALSE
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	90 e0       	ldi	r25, 0x00	; 0
  return(1); //true
}
 1ea:	df 91       	pop	r29
 1ec:	cf 91       	pop	r28
 1ee:	08 95       	ret

000001f0 <app_prime>:

void app_prime(int t)
{
 1f0:	cf 92       	push	r12
 1f2:	df 92       	push	r13
 1f4:	ef 92       	push	r14
 1f6:	ff 92       	push	r15
 1f8:	0f 93       	push	r16
 1fa:	1f 93       	push	r17
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	7c 01       	movw	r14, r24
   int n, count = 0;
 202:	00 e0       	ldi	r16, 0x00	; 0
 204:	10 e0       	ldi	r17, 0x00	; 0
   for (n = 2; n <= t; n++) {
 206:	c2 e0       	ldi	r28, 0x02	; 2
 208:	d0 e0       	ldi	r29, 0x00	; 0
      if (is_prime(n)) {
	     count++;
		 printf("%d is a prime number !!!\n", n);
 20a:	2e e0       	ldi	r18, 0x0E	; 14
 20c:	c2 2e       	mov	r12, r18
 20e:	22 e0       	ldi	r18, 0x02	; 2
 210:	d2 2e       	mov	r13, r18
}

void app_prime(int t)
{
   int n, count = 0;
   for (n = 2; n <= t; n++) {
 212:	16 c0       	rjmp	.+44     	; 0x240 <app_prime+0x50>
      if (is_prime(n)) {
 214:	ce 01       	movw	r24, r28
 216:	0e 94 da 00 	call	0x1b4	; 0x1b4 <is_prime>
 21a:	00 97       	sbiw	r24, 0x00	; 0
 21c:	81 f0       	breq	.+32     	; 0x23e <app_prime+0x4e>
	     count++;
 21e:	0f 5f       	subi	r16, 0xFF	; 255
 220:	1f 4f       	sbci	r17, 0xFF	; 255
		 printf("%d is a prime number !!!\n", n);
 222:	00 d0       	rcall	.+0      	; 0x224 <app_prime+0x34>
 224:	0f 92       	push	r0
 226:	ed b7       	in	r30, 0x3d	; 61
 228:	fe b7       	in	r31, 0x3e	; 62
 22a:	d2 82       	std	Z+2, r13	; 0x02
 22c:	c1 82       	std	Z+1, r12	; 0x01
 22e:	d4 83       	std	Z+4, r29	; 0x04
 230:	c3 83       	std	Z+3, r28	; 0x03
 232:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <printf>
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
}

void app_prime(int t)
{
   int n, count = 0;
   for (n = 2; n <= t; n++) {
 23e:	21 96       	adiw	r28, 0x01	; 1
 240:	ec 16       	cp	r14, r28
 242:	fd 06       	cpc	r15, r29
 244:	3c f7       	brge	.-50     	; 0x214 <app_prime+0x24>
      if (is_prime(n)) {
	     count++;
		 printf("%d is a prime number !!!\n", n);
      }
   }
   printf("count = %d\n",count);
 246:	00 d0       	rcall	.+0      	; 0x248 <app_prime+0x58>
 248:	0f 92       	push	r0
 24a:	88 e2       	ldi	r24, 0x28	; 40
 24c:	92 e0       	ldi	r25, 0x02	; 2
 24e:	ed b7       	in	r30, 0x3d	; 61
 250:	fe b7       	in	r31, 0x3e	; 62
 252:	92 83       	std	Z+2, r25	; 0x02
 254:	81 83       	std	Z+1, r24	; 0x01
 256:	14 83       	std	Z+4, r17	; 0x04
 258:	03 83       	std	Z+3, r16	; 0x03
 25a:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <printf>
 25e:	0f 90       	pop	r0
 260:	0f 90       	pop	r0
 262:	0f 90       	pop	r0
 264:	0f 90       	pop	r0
}
 266:	df 91       	pop	r29
 268:	cf 91       	pop	r28
 26a:	1f 91       	pop	r17
 26c:	0f 91       	pop	r16
 26e:	ff 90       	pop	r15
 270:	ef 90       	pop	r14
 272:	df 90       	pop	r13
 274:	cf 90       	pop	r12
 276:	08 95       	ret

00000278 <q_init>:
char q[Q_SIZE];
int f, r;

void q_init()
{
   f = r = 0;
 278:	10 92 38 02 	sts	0x0238, r1
 27c:	10 92 37 02 	sts	0x0237, r1
 280:	10 92 36 02 	sts	0x0236, r1
 284:	10 92 35 02 	sts	0x0235, r1
}
 288:	08 95       	ret

0000028a <q_insert>:

int q_insert(char ch)
{
 28a:	48 2f       	mov	r20, r24
   if (( r + 1) % Q_SIZE == f)
 28c:	20 91 37 02 	lds	r18, 0x0237
 290:	30 91 38 02 	lds	r19, 0x0238
 294:	2f 5f       	subi	r18, 0xFF	; 255
 296:	3f 4f       	sbci	r19, 0xFF	; 255
 298:	c9 01       	movw	r24, r18
 29a:	60 e4       	ldi	r22, 0x40	; 64
 29c:	70 e0       	ldi	r23, 0x00	; 0
 29e:	0e 94 bb 01 	call	0x376	; 0x376 <__divmodhi4>
 2a2:	9c 01       	movw	r18, r24
 2a4:	80 91 35 02 	lds	r24, 0x0235
 2a8:	90 91 36 02 	lds	r25, 0x0236
 2ac:	28 17       	cp	r18, r24
 2ae:	39 07       	cpc	r19, r25
 2b0:	59 f0       	breq	.+22     	; 0x2c8 <q_insert+0x3e>
      return(0); //full
   r = (r + 1) % Q_SIZE;
 2b2:	30 93 38 02 	sts	0x0238, r19
 2b6:	20 93 37 02 	sts	0x0237, r18
   q[r] = ch;
 2ba:	27 5c       	subi	r18, 0xC7	; 199
 2bc:	3d 4f       	sbci	r19, 0xFD	; 253
 2be:	f9 01       	movw	r30, r18
 2c0:	40 83       	st	Z, r20
   return(1);
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	08 95       	ret
}

int q_insert(char ch)
{
   if (( r + 1) % Q_SIZE == f)
      return(0); //full
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	90 e0       	ldi	r25, 0x00	; 0
   r = (r + 1) % Q_SIZE;
   q[r] = ch;
   return(1);
}
 2cc:	08 95       	ret

000002ce <q_delete>:

int q_delete()
{
   if ( r == f)
 2ce:	80 91 35 02 	lds	r24, 0x0235
 2d2:	90 91 36 02 	lds	r25, 0x0236
 2d6:	20 91 37 02 	lds	r18, 0x0237
 2da:	30 91 38 02 	lds	r19, 0x0238
 2de:	28 17       	cp	r18, r24
 2e0:	39 07       	cpc	r19, r25
 2e2:	79 f0       	breq	.+30     	; 0x302 <q_delete+0x34>
      return(0); //empty
   f = (f + 1) % Q_SIZE;
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	60 e4       	ldi	r22, 0x40	; 64
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	0e 94 bb 01 	call	0x376	; 0x376 <__divmodhi4>
 2ee:	90 93 36 02 	sts	0x0236, r25
 2f2:	80 93 35 02 	sts	0x0235, r24
   return(q[f]);
 2f6:	87 5c       	subi	r24, 0xC7	; 199
 2f8:	9d 4f       	sbci	r25, 0xFD	; 253
 2fa:	fc 01       	movw	r30, r24
 2fc:	80 81       	ld	r24, Z
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	08 95       	ret
}

int q_delete()
{
   if ( r == f)
      return(0); //empty
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
   f = (f + 1) % Q_SIZE;
   return(q[f]);
}
 306:	08 95       	ret

00000308 <__vector_27>:
#include "isr.h"
#include "q.h"
#include "init.h"

ISR(USART0_TX_vect)
{
 308:	1f 92       	push	r1
 30a:	0f 92       	push	r0
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	0f 92       	push	r0
 310:	0b b6       	in	r0, 0x3b	; 59
 312:	0f 92       	push	r0
 314:	11 24       	eor	r1, r1
 316:	2f 93       	push	r18
 318:	3f 93       	push	r19
 31a:	4f 93       	push	r20
 31c:	5f 93       	push	r21
 31e:	6f 93       	push	r22
 320:	7f 93       	push	r23
 322:	8f 93       	push	r24
 324:	9f 93       	push	r25
 326:	af 93       	push	r26
 328:	bf 93       	push	r27
 32a:	ef 93       	push	r30
 32c:	ff 93       	push	r31
   char ch;

   if ((ch = q_delete()) == 0)
 32e:	0e 94 67 01 	call	0x2ce	; 0x2ce <q_delete>
 332:	88 23       	and	r24, r24
 334:	19 f4       	brne	.+6      	; 0x33c <__vector_27+0x34>
      uart_busy = 0;
 336:	10 92 34 02 	sts	0x0234, r1
 33a:	02 c0       	rjmp	.+4      	; 0x340 <__vector_27+0x38>
   else
      UDR0 = ch;
 33c:	80 93 c6 00 	sts	0x00C6, r24
}
 340:	ff 91       	pop	r31
 342:	ef 91       	pop	r30
 344:	bf 91       	pop	r27
 346:	af 91       	pop	r26
 348:	9f 91       	pop	r25
 34a:	8f 91       	pop	r24
 34c:	7f 91       	pop	r23
 34e:	6f 91       	pop	r22
 350:	5f 91       	pop	r21
 352:	4f 91       	pop	r20
 354:	3f 91       	pop	r19
 356:	2f 91       	pop	r18
 358:	0f 90       	pop	r0
 35a:	0b be       	out	0x3b, r0	; 59
 35c:	0f 90       	pop	r0
 35e:	0f be       	out	0x3f, r0	; 63
 360:	0f 90       	pop	r0
 362:	1f 90       	pop	r1
 364:	18 95       	reti

00000366 <main>:
#include "prime.h"
#include "putchar.h"
#include "q.h"

int main() {
   uart_init();
 366:	0e 94 96 00 	call	0x12c	; 0x12c <uart_init>
   sei();
 36a:	78 94       	sei
   app_prime(2000);
 36c:	80 ed       	ldi	r24, 0xD0	; 208
 36e:	97 e0       	ldi	r25, 0x07	; 7
 370:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <app_prime>
 374:	ff cf       	rjmp	.-2      	; 0x374 <main+0xe>

00000376 <__divmodhi4>:
 376:	97 fb       	bst	r25, 7
 378:	09 2e       	mov	r0, r25
 37a:	07 26       	eor	r0, r23
 37c:	0a d0       	rcall	.+20     	; 0x392 <__divmodhi4_neg1>
 37e:	77 fd       	sbrc	r23, 7
 380:	04 d0       	rcall	.+8      	; 0x38a <__divmodhi4_neg2>
 382:	0c d0       	rcall	.+24     	; 0x39c <__udivmodhi4>
 384:	06 d0       	rcall	.+12     	; 0x392 <__divmodhi4_neg1>
 386:	00 20       	and	r0, r0
 388:	1a f4       	brpl	.+6      	; 0x390 <__divmodhi4_exit>

0000038a <__divmodhi4_neg2>:
 38a:	70 95       	com	r23
 38c:	61 95       	neg	r22
 38e:	7f 4f       	sbci	r23, 0xFF	; 255

00000390 <__divmodhi4_exit>:
 390:	08 95       	ret

00000392 <__divmodhi4_neg1>:
 392:	f6 f7       	brtc	.-4      	; 0x390 <__divmodhi4_exit>
 394:	90 95       	com	r25
 396:	81 95       	neg	r24
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	08 95       	ret

0000039c <__udivmodhi4>:
 39c:	aa 1b       	sub	r26, r26
 39e:	bb 1b       	sub	r27, r27
 3a0:	51 e1       	ldi	r21, 0x11	; 17
 3a2:	07 c0       	rjmp	.+14     	; 0x3b2 <__udivmodhi4_ep>

000003a4 <__udivmodhi4_loop>:
 3a4:	aa 1f       	adc	r26, r26
 3a6:	bb 1f       	adc	r27, r27
 3a8:	a6 17       	cp	r26, r22
 3aa:	b7 07       	cpc	r27, r23
 3ac:	10 f0       	brcs	.+4      	; 0x3b2 <__udivmodhi4_ep>
 3ae:	a6 1b       	sub	r26, r22
 3b0:	b7 0b       	sbc	r27, r23

000003b2 <__udivmodhi4_ep>:
 3b2:	88 1f       	adc	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	5a 95       	dec	r21
 3b8:	a9 f7       	brne	.-22     	; 0x3a4 <__udivmodhi4_loop>
 3ba:	80 95       	com	r24
 3bc:	90 95       	com	r25
 3be:	bc 01       	movw	r22, r24
 3c0:	cd 01       	movw	r24, r26
 3c2:	08 95       	ret

000003c4 <printf>:
 3c4:	cf 93       	push	r28
 3c6:	df 93       	push	r29
 3c8:	cd b7       	in	r28, 0x3d	; 61
 3ca:	de b7       	in	r29, 0x3e	; 62
 3cc:	fe 01       	movw	r30, r28
 3ce:	36 96       	adiw	r30, 0x06	; 6
 3d0:	61 91       	ld	r22, Z+
 3d2:	71 91       	ld	r23, Z+
 3d4:	80 91 7b 02 	lds	r24, 0x027B
 3d8:	90 91 7c 02 	lds	r25, 0x027C
 3dc:	af 01       	movw	r20, r30
 3de:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <vfprintf>
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	08 95       	ret

000003e8 <vfprintf>:
 3e8:	2f 92       	push	r2
 3ea:	3f 92       	push	r3
 3ec:	4f 92       	push	r4
 3ee:	5f 92       	push	r5
 3f0:	6f 92       	push	r6
 3f2:	7f 92       	push	r7
 3f4:	8f 92       	push	r8
 3f6:	9f 92       	push	r9
 3f8:	af 92       	push	r10
 3fa:	bf 92       	push	r11
 3fc:	cf 92       	push	r12
 3fe:	df 92       	push	r13
 400:	ef 92       	push	r14
 402:	ff 92       	push	r15
 404:	0f 93       	push	r16
 406:	1f 93       	push	r17
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	cd b7       	in	r28, 0x3d	; 61
 40e:	de b7       	in	r29, 0x3e	; 62
 410:	2d 97       	sbiw	r28, 0x0d	; 13
 412:	0f b6       	in	r0, 0x3f	; 63
 414:	f8 94       	cli
 416:	de bf       	out	0x3e, r29	; 62
 418:	0f be       	out	0x3f, r0	; 63
 41a:	cd bf       	out	0x3d, r28	; 61
 41c:	3c 01       	movw	r6, r24
 41e:	7d 87       	std	Y+13, r23	; 0x0d
 420:	6c 87       	std	Y+12, r22	; 0x0c
 422:	5a 01       	movw	r10, r20
 424:	fc 01       	movw	r30, r24
 426:	17 82       	std	Z+7, r1	; 0x07
 428:	16 82       	std	Z+6, r1	; 0x06
 42a:	83 81       	ldd	r24, Z+3	; 0x03
 42c:	81 ff       	sbrs	r24, 1
 42e:	c8 c1       	rjmp	.+912    	; 0x7c0 <vfprintf+0x3d8>
 430:	2e 01       	movw	r4, r28
 432:	08 94       	sec
 434:	41 1c       	adc	r4, r1
 436:	51 1c       	adc	r5, r1
 438:	f3 01       	movw	r30, r6
 43a:	93 81       	ldd	r25, Z+3	; 0x03
 43c:	ec 85       	ldd	r30, Y+12	; 0x0c
 43e:	fd 85       	ldd	r31, Y+13	; 0x0d
 440:	93 fd       	sbrc	r25, 3
 442:	85 91       	lpm	r24, Z+
 444:	93 ff       	sbrs	r25, 3
 446:	81 91       	ld	r24, Z+
 448:	fd 87       	std	Y+13, r31	; 0x0d
 44a:	ec 87       	std	Y+12, r30	; 0x0c
 44c:	88 23       	and	r24, r24
 44e:	09 f4       	brne	.+2      	; 0x452 <vfprintf+0x6a>
 450:	b3 c1       	rjmp	.+870    	; 0x7b8 <vfprintf+0x3d0>
 452:	85 32       	cpi	r24, 0x25	; 37
 454:	41 f4       	brne	.+16     	; 0x466 <vfprintf+0x7e>
 456:	93 fd       	sbrc	r25, 3
 458:	85 91       	lpm	r24, Z+
 45a:	93 ff       	sbrs	r25, 3
 45c:	81 91       	ld	r24, Z+
 45e:	fd 87       	std	Y+13, r31	; 0x0d
 460:	ec 87       	std	Y+12, r30	; 0x0c
 462:	85 32       	cpi	r24, 0x25	; 37
 464:	29 f4       	brne	.+10     	; 0x470 <vfprintf+0x88>
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	b3 01       	movw	r22, r6
 46a:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 46e:	e4 cf       	rjmp	.-56     	; 0x438 <vfprintf+0x50>
 470:	ff 24       	eor	r15, r15
 472:	ee 24       	eor	r14, r14
 474:	10 e0       	ldi	r17, 0x00	; 0
 476:	10 32       	cpi	r17, 0x20	; 32
 478:	b0 f4       	brcc	.+44     	; 0x4a6 <vfprintf+0xbe>
 47a:	8b 32       	cpi	r24, 0x2B	; 43
 47c:	69 f0       	breq	.+26     	; 0x498 <vfprintf+0xb0>
 47e:	8c 32       	cpi	r24, 0x2C	; 44
 480:	28 f4       	brcc	.+10     	; 0x48c <vfprintf+0xa4>
 482:	80 32       	cpi	r24, 0x20	; 32
 484:	51 f0       	breq	.+20     	; 0x49a <vfprintf+0xb2>
 486:	83 32       	cpi	r24, 0x23	; 35
 488:	71 f4       	brne	.+28     	; 0x4a6 <vfprintf+0xbe>
 48a:	0b c0       	rjmp	.+22     	; 0x4a2 <vfprintf+0xba>
 48c:	8d 32       	cpi	r24, 0x2D	; 45
 48e:	39 f0       	breq	.+14     	; 0x49e <vfprintf+0xb6>
 490:	80 33       	cpi	r24, 0x30	; 48
 492:	49 f4       	brne	.+18     	; 0x4a6 <vfprintf+0xbe>
 494:	11 60       	ori	r17, 0x01	; 1
 496:	2c c0       	rjmp	.+88     	; 0x4f0 <vfprintf+0x108>
 498:	12 60       	ori	r17, 0x02	; 2
 49a:	14 60       	ori	r17, 0x04	; 4
 49c:	29 c0       	rjmp	.+82     	; 0x4f0 <vfprintf+0x108>
 49e:	18 60       	ori	r17, 0x08	; 8
 4a0:	27 c0       	rjmp	.+78     	; 0x4f0 <vfprintf+0x108>
 4a2:	10 61       	ori	r17, 0x10	; 16
 4a4:	25 c0       	rjmp	.+74     	; 0x4f0 <vfprintf+0x108>
 4a6:	17 fd       	sbrc	r17, 7
 4a8:	2e c0       	rjmp	.+92     	; 0x506 <vfprintf+0x11e>
 4aa:	28 2f       	mov	r18, r24
 4ac:	20 53       	subi	r18, 0x30	; 48
 4ae:	2a 30       	cpi	r18, 0x0A	; 10
 4b0:	98 f4       	brcc	.+38     	; 0x4d8 <vfprintf+0xf0>
 4b2:	16 ff       	sbrs	r17, 6
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <vfprintf+0xde>
 4b6:	8f 2d       	mov	r24, r15
 4b8:	88 0f       	add	r24, r24
 4ba:	f8 2e       	mov	r15, r24
 4bc:	ff 0c       	add	r15, r15
 4be:	ff 0c       	add	r15, r15
 4c0:	f8 0e       	add	r15, r24
 4c2:	f2 0e       	add	r15, r18
 4c4:	15 c0       	rjmp	.+42     	; 0x4f0 <vfprintf+0x108>
 4c6:	8e 2d       	mov	r24, r14
 4c8:	88 0f       	add	r24, r24
 4ca:	e8 2e       	mov	r14, r24
 4cc:	ee 0c       	add	r14, r14
 4ce:	ee 0c       	add	r14, r14
 4d0:	e8 0e       	add	r14, r24
 4d2:	e2 0e       	add	r14, r18
 4d4:	10 62       	ori	r17, 0x20	; 32
 4d6:	0c c0       	rjmp	.+24     	; 0x4f0 <vfprintf+0x108>
 4d8:	8e 32       	cpi	r24, 0x2E	; 46
 4da:	21 f4       	brne	.+8      	; 0x4e4 <vfprintf+0xfc>
 4dc:	16 fd       	sbrc	r17, 6
 4de:	6c c1       	rjmp	.+728    	; 0x7b8 <vfprintf+0x3d0>
 4e0:	10 64       	ori	r17, 0x40	; 64
 4e2:	06 c0       	rjmp	.+12     	; 0x4f0 <vfprintf+0x108>
 4e4:	8c 36       	cpi	r24, 0x6C	; 108
 4e6:	11 f4       	brne	.+4      	; 0x4ec <vfprintf+0x104>
 4e8:	10 68       	ori	r17, 0x80	; 128
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <vfprintf+0x108>
 4ec:	88 36       	cpi	r24, 0x68	; 104
 4ee:	59 f4       	brne	.+22     	; 0x506 <vfprintf+0x11e>
 4f0:	ec 85       	ldd	r30, Y+12	; 0x0c
 4f2:	fd 85       	ldd	r31, Y+13	; 0x0d
 4f4:	93 fd       	sbrc	r25, 3
 4f6:	85 91       	lpm	r24, Z+
 4f8:	93 ff       	sbrs	r25, 3
 4fa:	81 91       	ld	r24, Z+
 4fc:	fd 87       	std	Y+13, r31	; 0x0d
 4fe:	ec 87       	std	Y+12, r30	; 0x0c
 500:	88 23       	and	r24, r24
 502:	09 f0       	breq	.+2      	; 0x506 <vfprintf+0x11e>
 504:	b8 cf       	rjmp	.-144    	; 0x476 <vfprintf+0x8e>
 506:	98 2f       	mov	r25, r24
 508:	95 54       	subi	r25, 0x45	; 69
 50a:	93 30       	cpi	r25, 0x03	; 3
 50c:	18 f0       	brcs	.+6      	; 0x514 <vfprintf+0x12c>
 50e:	90 52       	subi	r25, 0x20	; 32
 510:	93 30       	cpi	r25, 0x03	; 3
 512:	38 f4       	brcc	.+14     	; 0x522 <vfprintf+0x13a>
 514:	24 e0       	ldi	r18, 0x04	; 4
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	a2 0e       	add	r10, r18
 51a:	b3 1e       	adc	r11, r19
 51c:	3f e3       	ldi	r19, 0x3F	; 63
 51e:	39 83       	std	Y+1, r19	; 0x01
 520:	0f c0       	rjmp	.+30     	; 0x540 <vfprintf+0x158>
 522:	83 36       	cpi	r24, 0x63	; 99
 524:	31 f0       	breq	.+12     	; 0x532 <vfprintf+0x14a>
 526:	83 37       	cpi	r24, 0x73	; 115
 528:	81 f0       	breq	.+32     	; 0x54a <vfprintf+0x162>
 52a:	83 35       	cpi	r24, 0x53	; 83
 52c:	09 f0       	breq	.+2      	; 0x530 <vfprintf+0x148>
 52e:	5a c0       	rjmp	.+180    	; 0x5e4 <vfprintf+0x1fc>
 530:	22 c0       	rjmp	.+68     	; 0x576 <vfprintf+0x18e>
 532:	f5 01       	movw	r30, r10
 534:	80 81       	ld	r24, Z
 536:	89 83       	std	Y+1, r24	; 0x01
 538:	22 e0       	ldi	r18, 0x02	; 2
 53a:	30 e0       	ldi	r19, 0x00	; 0
 53c:	a2 0e       	add	r10, r18
 53e:	b3 1e       	adc	r11, r19
 540:	21 e0       	ldi	r18, 0x01	; 1
 542:	c2 2e       	mov	r12, r18
 544:	d1 2c       	mov	r13, r1
 546:	42 01       	movw	r8, r4
 548:	14 c0       	rjmp	.+40     	; 0x572 <vfprintf+0x18a>
 54a:	92 e0       	ldi	r25, 0x02	; 2
 54c:	29 2e       	mov	r2, r25
 54e:	31 2c       	mov	r3, r1
 550:	2a 0c       	add	r2, r10
 552:	3b 1c       	adc	r3, r11
 554:	f5 01       	movw	r30, r10
 556:	80 80       	ld	r8, Z
 558:	91 80       	ldd	r9, Z+1	; 0x01
 55a:	16 ff       	sbrs	r17, 6
 55c:	03 c0       	rjmp	.+6      	; 0x564 <vfprintf+0x17c>
 55e:	6f 2d       	mov	r22, r15
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	02 c0       	rjmp	.+4      	; 0x568 <vfprintf+0x180>
 564:	6f ef       	ldi	r22, 0xFF	; 255
 566:	7f ef       	ldi	r23, 0xFF	; 255
 568:	c4 01       	movw	r24, r8
 56a:	0e 94 06 04 	call	0x80c	; 0x80c <strnlen>
 56e:	6c 01       	movw	r12, r24
 570:	51 01       	movw	r10, r2
 572:	1f 77       	andi	r17, 0x7F	; 127
 574:	15 c0       	rjmp	.+42     	; 0x5a0 <vfprintf+0x1b8>
 576:	82 e0       	ldi	r24, 0x02	; 2
 578:	28 2e       	mov	r2, r24
 57a:	31 2c       	mov	r3, r1
 57c:	2a 0c       	add	r2, r10
 57e:	3b 1c       	adc	r3, r11
 580:	f5 01       	movw	r30, r10
 582:	80 80       	ld	r8, Z
 584:	91 80       	ldd	r9, Z+1	; 0x01
 586:	16 ff       	sbrs	r17, 6
 588:	03 c0       	rjmp	.+6      	; 0x590 <vfprintf+0x1a8>
 58a:	6f 2d       	mov	r22, r15
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	02 c0       	rjmp	.+4      	; 0x594 <vfprintf+0x1ac>
 590:	6f ef       	ldi	r22, 0xFF	; 255
 592:	7f ef       	ldi	r23, 0xFF	; 255
 594:	c4 01       	movw	r24, r8
 596:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <strnlen_P>
 59a:	6c 01       	movw	r12, r24
 59c:	10 68       	ori	r17, 0x80	; 128
 59e:	51 01       	movw	r10, r2
 5a0:	13 fd       	sbrc	r17, 3
 5a2:	1c c0       	rjmp	.+56     	; 0x5dc <vfprintf+0x1f4>
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <vfprintf+0x1ca>
 5a6:	80 e2       	ldi	r24, 0x20	; 32
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	b3 01       	movw	r22, r6
 5ac:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 5b0:	ea 94       	dec	r14
 5b2:	8e 2d       	mov	r24, r14
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	c8 16       	cp	r12, r24
 5b8:	d9 06       	cpc	r13, r25
 5ba:	a8 f3       	brcs	.-22     	; 0x5a6 <vfprintf+0x1be>
 5bc:	0f c0       	rjmp	.+30     	; 0x5dc <vfprintf+0x1f4>
 5be:	f4 01       	movw	r30, r8
 5c0:	17 fd       	sbrc	r17, 7
 5c2:	85 91       	lpm	r24, Z+
 5c4:	17 ff       	sbrs	r17, 7
 5c6:	81 91       	ld	r24, Z+
 5c8:	4f 01       	movw	r8, r30
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	b3 01       	movw	r22, r6
 5ce:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 5d2:	e1 10       	cpse	r14, r1
 5d4:	ea 94       	dec	r14
 5d6:	08 94       	sec
 5d8:	c1 08       	sbc	r12, r1
 5da:	d1 08       	sbc	r13, r1
 5dc:	c1 14       	cp	r12, r1
 5de:	d1 04       	cpc	r13, r1
 5e0:	71 f7       	brne	.-36     	; 0x5be <vfprintf+0x1d6>
 5e2:	e7 c0       	rjmp	.+462    	; 0x7b2 <vfprintf+0x3ca>
 5e4:	84 36       	cpi	r24, 0x64	; 100
 5e6:	11 f0       	breq	.+4      	; 0x5ec <vfprintf+0x204>
 5e8:	89 36       	cpi	r24, 0x69	; 105
 5ea:	51 f5       	brne	.+84     	; 0x640 <vfprintf+0x258>
 5ec:	f5 01       	movw	r30, r10
 5ee:	17 ff       	sbrs	r17, 7
 5f0:	07 c0       	rjmp	.+14     	; 0x600 <vfprintf+0x218>
 5f2:	80 81       	ld	r24, Z
 5f4:	91 81       	ldd	r25, Z+1	; 0x01
 5f6:	a2 81       	ldd	r26, Z+2	; 0x02
 5f8:	b3 81       	ldd	r27, Z+3	; 0x03
 5fa:	24 e0       	ldi	r18, 0x04	; 4
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	08 c0       	rjmp	.+16     	; 0x610 <vfprintf+0x228>
 600:	80 81       	ld	r24, Z
 602:	91 81       	ldd	r25, Z+1	; 0x01
 604:	aa 27       	eor	r26, r26
 606:	97 fd       	sbrc	r25, 7
 608:	a0 95       	com	r26
 60a:	ba 2f       	mov	r27, r26
 60c:	22 e0       	ldi	r18, 0x02	; 2
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	a2 0e       	add	r10, r18
 612:	b3 1e       	adc	r11, r19
 614:	01 2f       	mov	r16, r17
 616:	0f 76       	andi	r16, 0x6F	; 111
 618:	b7 ff       	sbrs	r27, 7
 61a:	08 c0       	rjmp	.+16     	; 0x62c <vfprintf+0x244>
 61c:	b0 95       	com	r27
 61e:	a0 95       	com	r26
 620:	90 95       	com	r25
 622:	81 95       	neg	r24
 624:	9f 4f       	sbci	r25, 0xFF	; 255
 626:	af 4f       	sbci	r26, 0xFF	; 255
 628:	bf 4f       	sbci	r27, 0xFF	; 255
 62a:	00 68       	ori	r16, 0x80	; 128
 62c:	bc 01       	movw	r22, r24
 62e:	cd 01       	movw	r24, r26
 630:	a2 01       	movw	r20, r4
 632:	2a e0       	ldi	r18, 0x0A	; 10
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	0e 94 3d 04 	call	0x87a	; 0x87a <__ultoa_invert>
 63a:	d8 2e       	mov	r13, r24
 63c:	d4 18       	sub	r13, r4
 63e:	3f c0       	rjmp	.+126    	; 0x6be <vfprintf+0x2d6>
 640:	85 37       	cpi	r24, 0x75	; 117
 642:	21 f4       	brne	.+8      	; 0x64c <vfprintf+0x264>
 644:	1f 7e       	andi	r17, 0xEF	; 239
 646:	2a e0       	ldi	r18, 0x0A	; 10
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	20 c0       	rjmp	.+64     	; 0x68c <vfprintf+0x2a4>
 64c:	19 7f       	andi	r17, 0xF9	; 249
 64e:	8f 36       	cpi	r24, 0x6F	; 111
 650:	a9 f0       	breq	.+42     	; 0x67c <vfprintf+0x294>
 652:	80 37       	cpi	r24, 0x70	; 112
 654:	20 f4       	brcc	.+8      	; 0x65e <vfprintf+0x276>
 656:	88 35       	cpi	r24, 0x58	; 88
 658:	09 f0       	breq	.+2      	; 0x65c <vfprintf+0x274>
 65a:	ae c0       	rjmp	.+348    	; 0x7b8 <vfprintf+0x3d0>
 65c:	0b c0       	rjmp	.+22     	; 0x674 <vfprintf+0x28c>
 65e:	80 37       	cpi	r24, 0x70	; 112
 660:	21 f0       	breq	.+8      	; 0x66a <vfprintf+0x282>
 662:	88 37       	cpi	r24, 0x78	; 120
 664:	09 f0       	breq	.+2      	; 0x668 <vfprintf+0x280>
 666:	a8 c0       	rjmp	.+336    	; 0x7b8 <vfprintf+0x3d0>
 668:	01 c0       	rjmp	.+2      	; 0x66c <vfprintf+0x284>
 66a:	10 61       	ori	r17, 0x10	; 16
 66c:	14 ff       	sbrs	r17, 4
 66e:	09 c0       	rjmp	.+18     	; 0x682 <vfprintf+0x29a>
 670:	14 60       	ori	r17, 0x04	; 4
 672:	07 c0       	rjmp	.+14     	; 0x682 <vfprintf+0x29a>
 674:	14 ff       	sbrs	r17, 4
 676:	08 c0       	rjmp	.+16     	; 0x688 <vfprintf+0x2a0>
 678:	16 60       	ori	r17, 0x06	; 6
 67a:	06 c0       	rjmp	.+12     	; 0x688 <vfprintf+0x2a0>
 67c:	28 e0       	ldi	r18, 0x08	; 8
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	05 c0       	rjmp	.+10     	; 0x68c <vfprintf+0x2a4>
 682:	20 e1       	ldi	r18, 0x10	; 16
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	02 c0       	rjmp	.+4      	; 0x68c <vfprintf+0x2a4>
 688:	20 e1       	ldi	r18, 0x10	; 16
 68a:	32 e0       	ldi	r19, 0x02	; 2
 68c:	f5 01       	movw	r30, r10
 68e:	17 ff       	sbrs	r17, 7
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <vfprintf+0x2b8>
 692:	60 81       	ld	r22, Z
 694:	71 81       	ldd	r23, Z+1	; 0x01
 696:	82 81       	ldd	r24, Z+2	; 0x02
 698:	93 81       	ldd	r25, Z+3	; 0x03
 69a:	44 e0       	ldi	r20, 0x04	; 4
 69c:	50 e0       	ldi	r21, 0x00	; 0
 69e:	06 c0       	rjmp	.+12     	; 0x6ac <vfprintf+0x2c4>
 6a0:	60 81       	ld	r22, Z
 6a2:	71 81       	ldd	r23, Z+1	; 0x01
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	42 e0       	ldi	r20, 0x02	; 2
 6aa:	50 e0       	ldi	r21, 0x00	; 0
 6ac:	a4 0e       	add	r10, r20
 6ae:	b5 1e       	adc	r11, r21
 6b0:	a2 01       	movw	r20, r4
 6b2:	0e 94 3d 04 	call	0x87a	; 0x87a <__ultoa_invert>
 6b6:	d8 2e       	mov	r13, r24
 6b8:	d4 18       	sub	r13, r4
 6ba:	01 2f       	mov	r16, r17
 6bc:	0f 77       	andi	r16, 0x7F	; 127
 6be:	06 ff       	sbrs	r16, 6
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <vfprintf+0x2ec>
 6c2:	0e 7f       	andi	r16, 0xFE	; 254
 6c4:	df 14       	cp	r13, r15
 6c6:	30 f4       	brcc	.+12     	; 0x6d4 <vfprintf+0x2ec>
 6c8:	04 ff       	sbrs	r16, 4
 6ca:	06 c0       	rjmp	.+12     	; 0x6d8 <vfprintf+0x2f0>
 6cc:	02 fd       	sbrc	r16, 2
 6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <vfprintf+0x2f0>
 6d0:	0f 7e       	andi	r16, 0xEF	; 239
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <vfprintf+0x2f0>
 6d4:	1d 2d       	mov	r17, r13
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <vfprintf+0x2f2>
 6d8:	1f 2d       	mov	r17, r15
 6da:	80 2f       	mov	r24, r16
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	04 ff       	sbrs	r16, 4
 6e0:	0c c0       	rjmp	.+24     	; 0x6fa <vfprintf+0x312>
 6e2:	fe 01       	movw	r30, r28
 6e4:	ed 0d       	add	r30, r13
 6e6:	f1 1d       	adc	r31, r1
 6e8:	20 81       	ld	r18, Z
 6ea:	20 33       	cpi	r18, 0x30	; 48
 6ec:	11 f4       	brne	.+4      	; 0x6f2 <vfprintf+0x30a>
 6ee:	09 7e       	andi	r16, 0xE9	; 233
 6f0:	09 c0       	rjmp	.+18     	; 0x704 <vfprintf+0x31c>
 6f2:	02 ff       	sbrs	r16, 2
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <vfprintf+0x31a>
 6f6:	1e 5f       	subi	r17, 0xFE	; 254
 6f8:	05 c0       	rjmp	.+10     	; 0x704 <vfprintf+0x31c>
 6fa:	86 78       	andi	r24, 0x86	; 134
 6fc:	90 70       	andi	r25, 0x00	; 0
 6fe:	00 97       	sbiw	r24, 0x00	; 0
 700:	09 f0       	breq	.+2      	; 0x704 <vfprintf+0x31c>
 702:	1f 5f       	subi	r17, 0xFF	; 255
 704:	80 2e       	mov	r8, r16
 706:	99 24       	eor	r9, r9
 708:	03 fd       	sbrc	r16, 3
 70a:	12 c0       	rjmp	.+36     	; 0x730 <vfprintf+0x348>
 70c:	00 ff       	sbrs	r16, 0
 70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x342>
 710:	fd 2c       	mov	r15, r13
 712:	1e 15       	cp	r17, r14
 714:	50 f4       	brcc	.+20     	; 0x72a <vfprintf+0x342>
 716:	fe 0c       	add	r15, r14
 718:	f1 1a       	sub	r15, r17
 71a:	1e 2d       	mov	r17, r14
 71c:	06 c0       	rjmp	.+12     	; 0x72a <vfprintf+0x342>
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	b3 01       	movw	r22, r6
 724:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 728:	1f 5f       	subi	r17, 0xFF	; 255
 72a:	1e 15       	cp	r17, r14
 72c:	c0 f3       	brcs	.-16     	; 0x71e <vfprintf+0x336>
 72e:	04 c0       	rjmp	.+8      	; 0x738 <vfprintf+0x350>
 730:	1e 15       	cp	r17, r14
 732:	10 f4       	brcc	.+4      	; 0x738 <vfprintf+0x350>
 734:	e1 1a       	sub	r14, r17
 736:	01 c0       	rjmp	.+2      	; 0x73a <vfprintf+0x352>
 738:	ee 24       	eor	r14, r14
 73a:	84 fe       	sbrs	r8, 4
 73c:	0f c0       	rjmp	.+30     	; 0x75c <vfprintf+0x374>
 73e:	80 e3       	ldi	r24, 0x30	; 48
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	b3 01       	movw	r22, r6
 744:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 748:	82 fe       	sbrs	r8, 2
 74a:	1f c0       	rjmp	.+62     	; 0x78a <vfprintf+0x3a2>
 74c:	81 fe       	sbrs	r8, 1
 74e:	03 c0       	rjmp	.+6      	; 0x756 <vfprintf+0x36e>
 750:	88 e5       	ldi	r24, 0x58	; 88
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	10 c0       	rjmp	.+32     	; 0x776 <vfprintf+0x38e>
 756:	88 e7       	ldi	r24, 0x78	; 120
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	0d c0       	rjmp	.+26     	; 0x776 <vfprintf+0x38e>
 75c:	c4 01       	movw	r24, r8
 75e:	86 78       	andi	r24, 0x86	; 134
 760:	90 70       	andi	r25, 0x00	; 0
 762:	00 97       	sbiw	r24, 0x00	; 0
 764:	91 f0       	breq	.+36     	; 0x78a <vfprintf+0x3a2>
 766:	81 fc       	sbrc	r8, 1
 768:	02 c0       	rjmp	.+4      	; 0x76e <vfprintf+0x386>
 76a:	80 e2       	ldi	r24, 0x20	; 32
 76c:	01 c0       	rjmp	.+2      	; 0x770 <vfprintf+0x388>
 76e:	8b e2       	ldi	r24, 0x2B	; 43
 770:	07 fd       	sbrc	r16, 7
 772:	8d e2       	ldi	r24, 0x2D	; 45
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	b3 01       	movw	r22, r6
 778:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 77c:	06 c0       	rjmp	.+12     	; 0x78a <vfprintf+0x3a2>
 77e:	80 e3       	ldi	r24, 0x30	; 48
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	b3 01       	movw	r22, r6
 784:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 788:	fa 94       	dec	r15
 78a:	df 14       	cp	r13, r15
 78c:	c0 f3       	brcs	.-16     	; 0x77e <vfprintf+0x396>
 78e:	da 94       	dec	r13
 790:	f2 01       	movw	r30, r4
 792:	ed 0d       	add	r30, r13
 794:	f1 1d       	adc	r31, r1
 796:	80 81       	ld	r24, Z
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	b3 01       	movw	r22, r6
 79c:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 7a0:	dd 20       	and	r13, r13
 7a2:	a9 f7       	brne	.-22     	; 0x78e <vfprintf+0x3a6>
 7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <vfprintf+0x3ca>
 7a6:	80 e2       	ldi	r24, 0x20	; 32
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	b3 01       	movw	r22, r6
 7ac:	0e 94 11 04 	call	0x822	; 0x822 <fputc>
 7b0:	ea 94       	dec	r14
 7b2:	ee 20       	and	r14, r14
 7b4:	c1 f7       	brne	.-16     	; 0x7a6 <vfprintf+0x3be>
 7b6:	40 ce       	rjmp	.-896    	; 0x438 <vfprintf+0x50>
 7b8:	f3 01       	movw	r30, r6
 7ba:	86 81       	ldd	r24, Z+6	; 0x06
 7bc:	97 81       	ldd	r25, Z+7	; 0x07
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0x3dc>
 7c0:	8f ef       	ldi	r24, 0xFF	; 255
 7c2:	9f ef       	ldi	r25, 0xFF	; 255
 7c4:	2d 96       	adiw	r28, 0x0d	; 13
 7c6:	0f b6       	in	r0, 0x3f	; 63
 7c8:	f8 94       	cli
 7ca:	de bf       	out	0x3e, r29	; 62
 7cc:	0f be       	out	0x3f, r0	; 63
 7ce:	cd bf       	out	0x3d, r28	; 61
 7d0:	df 91       	pop	r29
 7d2:	cf 91       	pop	r28
 7d4:	1f 91       	pop	r17
 7d6:	0f 91       	pop	r16
 7d8:	ff 90       	pop	r15
 7da:	ef 90       	pop	r14
 7dc:	df 90       	pop	r13
 7de:	cf 90       	pop	r12
 7e0:	bf 90       	pop	r11
 7e2:	af 90       	pop	r10
 7e4:	9f 90       	pop	r9
 7e6:	8f 90       	pop	r8
 7e8:	7f 90       	pop	r7
 7ea:	6f 90       	pop	r6
 7ec:	5f 90       	pop	r5
 7ee:	4f 90       	pop	r4
 7f0:	3f 90       	pop	r3
 7f2:	2f 90       	pop	r2
 7f4:	08 95       	ret

000007f6 <strnlen_P>:
 7f6:	fc 01       	movw	r30, r24
 7f8:	05 90       	lpm	r0, Z+
 7fa:	61 50       	subi	r22, 0x01	; 1
 7fc:	70 40       	sbci	r23, 0x00	; 0
 7fe:	01 10       	cpse	r0, r1
 800:	d8 f7       	brcc	.-10     	; 0x7f8 <strnlen_P+0x2>
 802:	80 95       	com	r24
 804:	90 95       	com	r25
 806:	8e 0f       	add	r24, r30
 808:	9f 1f       	adc	r25, r31
 80a:	08 95       	ret

0000080c <strnlen>:
 80c:	fc 01       	movw	r30, r24
 80e:	61 50       	subi	r22, 0x01	; 1
 810:	70 40       	sbci	r23, 0x00	; 0
 812:	01 90       	ld	r0, Z+
 814:	01 10       	cpse	r0, r1
 816:	d8 f7       	brcc	.-10     	; 0x80e <strnlen+0x2>
 818:	80 95       	com	r24
 81a:	90 95       	com	r25
 81c:	8e 0f       	add	r24, r30
 81e:	9f 1f       	adc	r25, r31
 820:	08 95       	ret

00000822 <fputc>:
 822:	0f 93       	push	r16
 824:	1f 93       	push	r17
 826:	cf 93       	push	r28
 828:	df 93       	push	r29
 82a:	8c 01       	movw	r16, r24
 82c:	eb 01       	movw	r28, r22
 82e:	8b 81       	ldd	r24, Y+3	; 0x03
 830:	81 ff       	sbrs	r24, 1
 832:	1b c0       	rjmp	.+54     	; 0x86a <fputc+0x48>
 834:	82 ff       	sbrs	r24, 2
 836:	0d c0       	rjmp	.+26     	; 0x852 <fputc+0x30>
 838:	2e 81       	ldd	r18, Y+6	; 0x06
 83a:	3f 81       	ldd	r19, Y+7	; 0x07
 83c:	8c 81       	ldd	r24, Y+4	; 0x04
 83e:	9d 81       	ldd	r25, Y+5	; 0x05
 840:	28 17       	cp	r18, r24
 842:	39 07       	cpc	r19, r25
 844:	64 f4       	brge	.+24     	; 0x85e <fputc+0x3c>
 846:	e8 81       	ld	r30, Y
 848:	f9 81       	ldd	r31, Y+1	; 0x01
 84a:	01 93       	st	Z+, r16
 84c:	f9 83       	std	Y+1, r31	; 0x01
 84e:	e8 83       	st	Y, r30
 850:	06 c0       	rjmp	.+12     	; 0x85e <fputc+0x3c>
 852:	e8 85       	ldd	r30, Y+8	; 0x08
 854:	f9 85       	ldd	r31, Y+9	; 0x09
 856:	80 2f       	mov	r24, r16
 858:	19 95       	eicall
 85a:	00 97       	sbiw	r24, 0x00	; 0
 85c:	31 f4       	brne	.+12     	; 0x86a <fputc+0x48>
 85e:	8e 81       	ldd	r24, Y+6	; 0x06
 860:	9f 81       	ldd	r25, Y+7	; 0x07
 862:	01 96       	adiw	r24, 0x01	; 1
 864:	9f 83       	std	Y+7, r25	; 0x07
 866:	8e 83       	std	Y+6, r24	; 0x06
 868:	02 c0       	rjmp	.+4      	; 0x86e <fputc+0x4c>
 86a:	0f ef       	ldi	r16, 0xFF	; 255
 86c:	1f ef       	ldi	r17, 0xFF	; 255
 86e:	c8 01       	movw	r24, r16
 870:	df 91       	pop	r29
 872:	cf 91       	pop	r28
 874:	1f 91       	pop	r17
 876:	0f 91       	pop	r16
 878:	08 95       	ret

0000087a <__ultoa_invert>:
 87a:	fa 01       	movw	r30, r20
 87c:	aa 27       	eor	r26, r26
 87e:	28 30       	cpi	r18, 0x08	; 8
 880:	51 f1       	breq	.+84     	; 0x8d6 <__ultoa_invert+0x5c>
 882:	20 31       	cpi	r18, 0x10	; 16
 884:	81 f1       	breq	.+96     	; 0x8e6 <__ultoa_invert+0x6c>
 886:	e8 94       	clt
 888:	6f 93       	push	r22
 88a:	6e 7f       	andi	r22, 0xFE	; 254
 88c:	6e 5f       	subi	r22, 0xFE	; 254
 88e:	7f 4f       	sbci	r23, 0xFF	; 255
 890:	8f 4f       	sbci	r24, 0xFF	; 255
 892:	9f 4f       	sbci	r25, 0xFF	; 255
 894:	af 4f       	sbci	r26, 0xFF	; 255
 896:	b1 e0       	ldi	r27, 0x01	; 1
 898:	3e d0       	rcall	.+124    	; 0x916 <__ultoa_invert+0x9c>
 89a:	b4 e0       	ldi	r27, 0x04	; 4
 89c:	3c d0       	rcall	.+120    	; 0x916 <__ultoa_invert+0x9c>
 89e:	67 0f       	add	r22, r23
 8a0:	78 1f       	adc	r23, r24
 8a2:	89 1f       	adc	r24, r25
 8a4:	9a 1f       	adc	r25, r26
 8a6:	a1 1d       	adc	r26, r1
 8a8:	68 0f       	add	r22, r24
 8aa:	79 1f       	adc	r23, r25
 8ac:	8a 1f       	adc	r24, r26
 8ae:	91 1d       	adc	r25, r1
 8b0:	a1 1d       	adc	r26, r1
 8b2:	6a 0f       	add	r22, r26
 8b4:	71 1d       	adc	r23, r1
 8b6:	81 1d       	adc	r24, r1
 8b8:	91 1d       	adc	r25, r1
 8ba:	a1 1d       	adc	r26, r1
 8bc:	20 d0       	rcall	.+64     	; 0x8fe <__ultoa_invert+0x84>
 8be:	09 f4       	brne	.+2      	; 0x8c2 <__ultoa_invert+0x48>
 8c0:	68 94       	set
 8c2:	3f 91       	pop	r19
 8c4:	2a e0       	ldi	r18, 0x0A	; 10
 8c6:	26 9f       	mul	r18, r22
 8c8:	11 24       	eor	r1, r1
 8ca:	30 19       	sub	r19, r0
 8cc:	30 5d       	subi	r19, 0xD0	; 208
 8ce:	31 93       	st	Z+, r19
 8d0:	de f6       	brtc	.-74     	; 0x888 <__ultoa_invert+0xe>
 8d2:	cf 01       	movw	r24, r30
 8d4:	08 95       	ret
 8d6:	46 2f       	mov	r20, r22
 8d8:	47 70       	andi	r20, 0x07	; 7
 8da:	40 5d       	subi	r20, 0xD0	; 208
 8dc:	41 93       	st	Z+, r20
 8de:	b3 e0       	ldi	r27, 0x03	; 3
 8e0:	0f d0       	rcall	.+30     	; 0x900 <__ultoa_invert+0x86>
 8e2:	c9 f7       	brne	.-14     	; 0x8d6 <__ultoa_invert+0x5c>
 8e4:	f6 cf       	rjmp	.-20     	; 0x8d2 <__ultoa_invert+0x58>
 8e6:	46 2f       	mov	r20, r22
 8e8:	4f 70       	andi	r20, 0x0F	; 15
 8ea:	40 5d       	subi	r20, 0xD0	; 208
 8ec:	4a 33       	cpi	r20, 0x3A	; 58
 8ee:	18 f0       	brcs	.+6      	; 0x8f6 <__ultoa_invert+0x7c>
 8f0:	49 5d       	subi	r20, 0xD9	; 217
 8f2:	31 fd       	sbrc	r19, 1
 8f4:	40 52       	subi	r20, 0x20	; 32
 8f6:	41 93       	st	Z+, r20
 8f8:	02 d0       	rcall	.+4      	; 0x8fe <__ultoa_invert+0x84>
 8fa:	a9 f7       	brne	.-22     	; 0x8e6 <__ultoa_invert+0x6c>
 8fc:	ea cf       	rjmp	.-44     	; 0x8d2 <__ultoa_invert+0x58>
 8fe:	b4 e0       	ldi	r27, 0x04	; 4
 900:	a6 95       	lsr	r26
 902:	97 95       	ror	r25
 904:	87 95       	ror	r24
 906:	77 95       	ror	r23
 908:	67 95       	ror	r22
 90a:	ba 95       	dec	r27
 90c:	c9 f7       	brne	.-14     	; 0x900 <__ultoa_invert+0x86>
 90e:	00 97       	sbiw	r24, 0x00	; 0
 910:	61 05       	cpc	r22, r1
 912:	71 05       	cpc	r23, r1
 914:	08 95       	ret
 916:	9b 01       	movw	r18, r22
 918:	ac 01       	movw	r20, r24
 91a:	0a 2e       	mov	r0, r26
 91c:	06 94       	lsr	r0
 91e:	57 95       	ror	r21
 920:	47 95       	ror	r20
 922:	37 95       	ror	r19
 924:	27 95       	ror	r18
 926:	ba 95       	dec	r27
 928:	c9 f7       	brne	.-14     	; 0x91c <__ultoa_invert+0xa2>
 92a:	62 0f       	add	r22, r18
 92c:	73 1f       	adc	r23, r19
 92e:	84 1f       	adc	r24, r20
 930:	95 1f       	adc	r25, r21
 932:	a0 1d       	adc	r26, r0
 934:	08 95       	ret

00000936 <_exit>:
 936:	f8 94       	cli

00000938 <__stop_program>:
 938:	ff cf       	rjmp	.-2      	; 0x938 <__stop_program>
